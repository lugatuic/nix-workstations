From 96fdc58e8051e83d3ccccbb0380f496294355b85 Mon Sep 17 00:00:00 2001
From: EVA-ROOT <EVA@acm.cs>
Date: Mon, 27 Jun 2022 17:35:37 -0500
Subject: [PATCH] Update to currently in use

---
 flake.lock                                    |  26 ++++
 flake.nix                                     |   2 +-
 ...hardware.nix => hardware-configuration.nix |  14 +-
 main.nix                                      | 142 +++++++++++++-----
 4 files changed, 136 insertions(+), 48 deletions(-)
 create mode 100644 flake.lock
 rename system/hardware.nix => hardware-configuration.nix (74%)

diff --git a/flake.lock b/flake.lock
new file mode 100644
index 0000000..08cd419
--- /dev/null
+++ b/flake.lock
@@ -0,0 +1,26 @@
+{
+  "nodes": {
+    "nixpkgs": {
+      "locked": {
+        "lastModified": 1656265786,
+        "narHash": "sha256-A9RkoGrxzsmMm0vily18p92Rasb+MbdDMaSnzmywXKw=",
+        "owner": "NixOS",
+        "repo": "nixpkgs",
+        "rev": "cd90e773eae83ba7733d2377b6cdf84d45558780",
+        "type": "github"
+      },
+      "original": {
+        "id": "nixpkgs",
+        "ref": "nixos-22.05",
+        "type": "indirect"
+      }
+    },
+    "root": {
+      "inputs": {
+        "nixpkgs": "nixpkgs"
+      }
+    }
+  },
+  "root": "root",
+  "version": 7
+}
diff --git a/flake.nix b/flake.nix
index ded88d4..0bafe2c 100644
--- a/flake.nix
+++ b/flake.nix
@@ -14,7 +14,7 @@
         };
       };
     in {
-      nixosConfigurations.nixos = nixpkgs.lib.nixosSystem {
+      nixosConfigurations."EVA" = nixpkgs.lib.nixosSystem {
         inherit system;
         modules = [ ./main.nix ];
       };
diff --git a/system/hardware.nix b/hardware-configuration.nix
similarity index 74%
rename from system/hardware.nix
rename to hardware-configuration.nix
index 130053b..275bbf2 100644
--- a/system/hardware.nix
+++ b/hardware-configuration.nix
@@ -1,3 +1,6 @@
+# Do not modify this file!  It was generated by ‘nixos-generate-config’
+# and may be overwritten by future invocations.  Please make changes
+# to /etc/nixos/configuration.nix instead.
 { config, lib, pkgs, modulesPath, ... }:
 
 {
@@ -11,16 +14,13 @@
   boot.extraModulePackages = [ ];
 
   fileSystems."/" =
-    { device = "/dev/disk/by-label/main";
+    { device = "/dev/disk/by-uuid/d9da76fb-72db-4a13-8a36-0020284a9491";
       fsType = "ext4";
     };
 
-  fileSystems."/boot" =
-    { device = "/dev/disk/by-label/esp";
-      fsType = "vfat";
-    };
-
-  swapDevices = [ ];
+  swapDevices =
+    [ { device = "/dev/disk/by-uuid/b71f3131-8ead-4985-b25e-d3d59ec306d5"; }
+    ];
 
   # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
   # (the default) this is the recommended approach. When using systemd-networkd it's
diff --git a/main.nix b/main.nix
index 40cca06..31496c2 100644
--- a/main.nix
+++ b/main.nix
@@ -1,65 +1,127 @@
-{config, lib, pkgs, ...}:
+# Edit this configuration file to define what should be installed on
+# your system.  Help is available in the configuration.nix(5) man page
+# and in the NixOS manual (accessible by running ‘nixos-help’).
 
-{
+{ config, pkgs, ... }:
 
-  imports = [./system/hardware.nix];
+{
+  imports =
+    [ # Include the results of the hardware scan.
+      ./hardware-configuration.nix
+    ];
 
-  # Enable Flakes
   nix = {
     package = pkgs.nixFlakes;
-    extraOptions = "experimental-features = nix-command flakes";
+    extraOptions = ''
+                 experimental-features = nix-command flakes
+    '';
   };
 
-  boot.loader.efi.canTouchEfiVariables = true;
-  boot.loader.systemd-boot.enable = true;
-  
+  # Bootloader.
+  boot.loader.grub.enable = true;
+  boot.loader.grub.device = "/dev/sdb";
+  boot.loader.grub.useOSProber = true;
 
-  users.motd = ''
-    Hello random user, Welcome to LUG+ACM at UIC!\n
-    Enjoy using this super cool Workstation powered by NixOS!\n\n
-  '';
-  users.users.lugnix = {
-    isNormalUser = true;
-    extraGroups = ["users" "wheel"];
-    createHome = true;
+  networking.hostName = "EVA"; # Define your hostname.
+  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
 
-    # Good luck hackers ;)
-    hashedPassword = "$6$fPQXxMm0MLDIYVzm$v.yav/eptB0vvNGYSDdaDtuTAszZzB8UVGaXOA/fFfOWEol.wu7vYSZVmNipfiJPvScxDOeTERriH5A0r3hu1.";
-  };
+  # Configure network proxy if necessary
+  # networking.proxy.default = "http://user:password@proxy:port/";
+  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";
+
+  # Enable networking
+  networking.networkmanager.enable = true;
+
+  # Set your time zone.
+  time.timeZone = "America/Chicago";
+
+  # Select internationalisation properties.
+  i18n.defaultLocale = "en_US.utf8";
 
   # Enable the X11 windowing system.
   services.xserver.enable = true;
 
+  # Enable the KDE Plasma Desktop Environment.
+  services.xserver.displayManager.sddm.enable = true;
+  services.xserver.desktopManager.plasma5.enable = true;
 
-  # Enable the GNOME Desktop Environment.
-  services.xserver.displayManager.gdm.enable = true;
-  services.xserver.desktopManager.gnome.enable = true;
+  # Configure keymap in X11
+  services.xserver = {
+    layout = "us";
+    xkbVariant = "";
+  };
 
-  networking.firewall.enable = false;
+  # Enable CUPS to print documents.
+  services.printing.enable = true;
 
-  environment.systemPackages = with pkgs; [
-    vim
-    emacs
-    coreutils
-    psmisc
-    gcc
-    firefox
-    git
-  ];
+  # Enable sound with pipewire.
+  sound.enable = true;
+  hardware.pulseaudio.enable = false;
+  security.rtkit.enable = true;
+  services.pipewire = {
+    enable = true;
+    alsa.enable = true;
+    alsa.support32Bit = true;
+    pulse.enable = true;
+    # If you want to use JACK applications, uncomment this
+    #jack.enable = true;
+
+    # use the example session manager (no others are packaged yet so this is enabled by default,
+    # no need to redefine it in your config for now)
+    #media-session.enable = true;
+  };
 
-  environment.variables = {
-    EDITOR = "vim";
+  # Enable touchpad support (enabled default in most desktopManager).
+  # services.xserver.libinput.enable = true;
+
+  # Define a user account. Don't forget to set a password with ‘passwd’.
+  users.users.acm = {
+    isNormalUser = true;
+    description = "ACM";
+    extraGroups = [ "networkmanager" "wheel" ];
   };
 
-  services.openssh.enable = true;
+  # Allow unfree packages
+  nixpkgs.config.allowUnfree = true;
 
-  time.timeZone = "America/Chicago";
+  # List packages installed in system profile. To search, run:
+  # $ nix search wget
+  environment.systemPackages = with pkgs; [
+  #  vim # Do not forget to add an editor to edit configuration.nix! The Nano editor is also installed by default.
+  #  wget
+    firefox
+    kate
+  ];
 
-  services.fstrim.enable = true;
+  # Some programs need SUID wrappers, can be configured further or are
+  # started in user sessions.
+  # programs.mtr.enable = true;
+  # programs.gnupg.agent = {
+  #   enable = true;
+  #   enableSSHSupport = true;
+  # };
 
-  sound.enable = true;
-  hardware.pulseaudio.enable = true;
+  # List services that you want to enable:
+
+  # Enable the OpenSSH daemon.
+  services.openssh.enable = true;
+  services.openssh.permitRootLogin = "yes";
+  
+  services.avahi.enable = true;
+  services.avahi.nssmdns = true;
+  services.avahi.publish.enable = true;
+  # Open ports in the firewall.
+  # networking.firewall.allowedTCPPorts = [ ... ];
+  # networking.firewall.allowedUDPPorts = [ ... ];
+  # Or disable the firewall altogether.
+  networking.firewall.enable = false;
 
-  system.stateVersion = "22.05";
+  # This value determines the NixOS release from which the default
+  # settings for stateful data, like file locations and database versions
+  # on your system were taken. It‘s perfectly fine and recommended to leavecatenate(variables, "bootdev", bootdev)
+  # this value at the release version of the first install of this system.
+  # Before changing this value read the documentation for this option
+  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
+  system.stateVersion = "22.05"; # Did you read the comment?
 
 }
-- 
2.36.0

